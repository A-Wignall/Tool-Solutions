diff --git a/tensorflow/workspace.bzl b/tensorflow/workspace.bzl
index 25484734fc..259627ecf2 100755
--- a/tensorflow/workspace.bzl
+++ b/tensorflow/workspace.bzl
@@ -135,23 +135,18 @@ def tf_repositories(path_prefix = "", tf_repo_name = ""):
     tf_http_archive(
         name = "mkl_dnn",
         build_file = clean_dep("//third_party/mkl_dnn:mkldnn.BUILD"),
-        sha256 = "74675e93eef339ff3d9a9be95c15d0c7ad8736a5356c23428ab2e33dcdb8e3e1",
-        strip_prefix = "mkl-dnn-0.20.6",
+        sha256 = "38a1c02104ee9f630c1ad68164119cd58ad0aaf59e04ccbe7bd5781add7bfbea",
+        strip_prefix = "mkl-dnn-0.18",
         urls = [
-            "https://storage.googleapis.com/mirror.tensorflow.org/github.com/intel/mkl-dnn/archive/v0.20.6.tar.gz",
-            "https://github.com/intel/mkl-dnn/archive/v0.20.6.tar.gz",
+            "http://mirror.tensorflow.org/github.com/intel/mkl-dnn/archive/v0.18.tar.gz",
+            "https://github.com/intel/mkl-dnn/archive/v0.18.tar.gz",
         ],
     )

-    tf_http_archive(
+    native.new_local_repository(
         name = "mkl_dnn_v1",
         build_file = clean_dep("//third_party/mkl_dnn:mkldnn.BUILD"),
-        sha256 = "fcc2d951f7170eade0cfdd0d8d1d58e3e7785bd326bca6555f3722f8cba71811",
-        strip_prefix = "mkl-dnn-1.0-pc2",
-        urls = [
-            "https://storage.googleapis.com/mirror.tensorflow.org/github.com/intel/mkl-dnn/archive/v1.0-pc2.tar.gz",
-            "https://github.com/intel/mkl-dnn/archive/v1.0-pc2.tar.gz",
-        ],
+        path = '/opt/mkl-dnn/1.1.2'
     )

     tf_http_archive(
diff --git a/third_party/mkl_dnn/mkldnn.BUILD b/third_party/mkl_dnn/mkldnn.BUILD
index 35832ffcef..03f7645a1a 100644
--- a/third_party/mkl_dnn/mkldnn.BUILD
+++ b/third_party/mkl_dnn/mkldnn.BUILD
@@ -18,16 +18,6 @@ config_setting(
     },
 )

-template_rule(
-    name = "mkldnn_config_h",
-    src = "include/mkldnn_config.h.in",
-    out = "include/mkldnn_config.h",
-    substitutions = {
-        "#cmakedefine MKLDNN_CPU_BACKEND MKLDNN_BACKEND_${MKLDNN_CPU_BACKEND}": "#define MKLDNN_CPU_BACKEND MKLDNN_BACKEND_NATIVE",
-        "#cmakedefine MKLDNN_GPU_BACKEND MKLDNN_BACKEND_${MKLDNN_GPU_BACKEND}": "#define MKLDNN_GPU_BACKEND MKLDNN_BACKEND_NONE",
-    },
-)
-
 # Create the file mkldnn_version.h with MKL-DNN version numbers.
 # Currently, the version numbers are hard coded here. If MKL-DNN is upgraded then
 # the version numbers have to be updated manually. The version numbers can be
@@ -38,61 +28,25 @@ template_rule(
 # TODO(bhavanis): MKL-DNN minor version needs to be updated for MKL-DNN v1.x.
 # The current version numbers will work only if MKL-DNN v0.20 is used.

-template_rule(
-    name = "mkldnn_version_h",
-    src = "include/mkldnn_version.h.in",
-    out = "include/mkldnn_version.h",
-    substitutions = {
-        "@MKLDNN_VERSION_MAJOR@": "0",
-        "@MKLDNN_VERSION_MINOR@": "20",
-        "@MKLDNN_VERSION_PATCH@": "3",
-        "@MKLDNN_VERSION_HASH@": "N/A",
-    },
+cc_library(
+    name = "mkldnn_headers",
+    srcs = glob(["include/*"]),
+    includes = ["include"],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "mkldnn_libs",
+    srcs = glob(["lib/*"]),
+    visibility = ["//visibility:public"],
 )

 cc_library(
     name = "mkl_dnn",
-    srcs = glob([
-        "src/common/*.cpp",
-        "src/common/*.hpp",
-        "src/cpu/*.cpp",
-        "src/cpu/*.hpp",
-        "src/cpu/**/*.cpp",
-        "src/cpu/**/*.hpp",
-        "src/cpu/xbyak/*.h",
-    ]) + if_mkl_v1_open_source_only([
-        ":mkldnn_config_h",
-    ]) + [":mkldnn_version_h"],
-    hdrs = glob(["include/*"]),
-    copts = [
-        "-fexceptions",
-        "-DUSE_MKL",
-        "-DUSE_CBLAS",
-    ] + if_mkl_open_source_only([
-        "-UUSE_MKL",
-        "-UUSE_CBLAS",
-    ]) + if_mkl_v1_open_source_only([
-        "-UUSE_MKL",
-        "-UUSE_CBLAS",
-    ]) + select({
-        "@org_tensorflow//tensorflow:linux_x86_64": [
-            "-fopenmp",  # only works with gcc
-        ],
-        # TODO(ibiryukov): enable openmp with clang by including libomp as a
-        # dependency.
-        ":clang_linux_x86_64": [],
-        "//conditions:default": [],
-    }),
-    includes = [
-        "include",
-        "src",
-        "src/common",
-        "src/cpu",
-        "src/cpu/gemm",
-        "src/cpu/xbyak",
-    ],
     visibility = ["//visibility:public"],
-    deps = select({
+    deps = ["@mkl_dnn//:mkldnn_headers",
+            "@mkl_dnn//:mkldnn_libs",
+           ] + select({
         "@org_tensorflow//tensorflow:linux_x86_64": [
             "@mkl_linux//:mkl_headers",
             "@mkl_linux//:mkl_libs_linux",
